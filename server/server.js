const express = require("express");
const app = express();

app.use(express.json());
app.listen(5000, () => console.log("server started on port 5000"));

//otp storage data structure mocking a database.
let otpMap = new Map();

/**
 * Generate a random 4 digit OTP.
 * @returns {number} otp
 */
function generateOtp() {
  let otp = Math.floor(Math.random() * (9999 - 1000 + 1) + 1000);
  return otp;
}

/**
 * POST /api/get-otp
 * Generate a `4 digit` OTP by phone number.
 *
 * @param {string} requestBody.phoneNum - user's phone number.
 * @returns {JSON} - JSON containing 4 digit OTP
 *
 * Example Request:
 * POST /api/get-otp
 * {
 *    "phoneNum": "+919876543210"
 * }
 *
 * Example Response:
 * {
 *   "otp": "4567",
 * }
 *
 * Retrieves a phone number from req body to generate an OTP.
 * OTP is then stored in the `OtpMap` data structure until user verifies it.
 *
 */
app.post("/api/get-otp", (req, res) => {
  const phoneNum = req.body.phoneNum;
  if (phoneNum.length >= 10) {
    const otp = generateOtp();
    otpMap.set(phoneNum, otp);
    res.json({ otp: otp });
  } else {
    res.json({ "message": "Error occured. Check input phone number" });
  }
});

/**
 * DELETE /api/verify-otp
 * Verify a OTP sent for a phone number.
 *
 * @param {string} requestBody.otp - OTP sent to user.
 * @returns {JSON} - JSON containing success/error message
 *
 * Example Request:
 * DELETE /api/verify-otp
 * {
 *    "otp": "1234"
 * }
 *
 * Example Response:
 * {
 *   "message": "Success. OTP verified! Welcome to AdmitKard!,
 * }
 *
 * OR
 *
 * {
 *   "error": "Incorrect OTP. Verification Failed. Try again."
 * }
 *
 * Verifies the OTP sent by the user which was previously generated by the user.
 *
 */
app.delete("/api/verify-otp", (req, res) => {
  const userOtp = parseInt(req.body.otp);
  const phoneNum = req.body.phoneNum;

  if (otpMap.get(phoneNum) === userOtp) {
    otpMap.delete(phoneNum);
    res.json({ message: "Success. OTP verified! Welcome to AdmitKard!" });
  } else {
    res.json({ error: "Incorrect OTP. Verification Failed. Try again." });
  }
});

/**
 * PUT /api/resend-otp
 * Re-generate and get a new OTP by phone number.
 *
 * @param {string} requestBody.phoneNum - user's phone number.
 * @returns {JSON} - JSON containing 4 digit OTP
 *
 * Example Request:
 * PUT /api/resend-otp
 * {
 *    "phoneNum": "+919876543210"
 * }
 *
 * Example Response:
 * {
 *   "otp": "4567",
 * }
 *
 * Retrieves a phone number from req body to re-generate an OTP.
 * Otp is then sent to the user.
 *
 */
app.put("/api/resend-otp", (req, res) => {
  const phoneNum = req.body.phoneNum;
  const otp = generateOtp();
  otpMap.set(phoneNum, otp);
  res.json({ otp: otp });
});
